name: Daily Download and Save

on:
  schedule:
    - cron: "0 2 */3 * *" # 每3天凌晨 2 点运行
  workflow_dispatch: # 手动触发工作流
    inputs:
      reason:
        description: "Reason for manual trigger"
        required: false
  push:
    paths:
      - 'config.yaml'
    branches:
      - '**'
    tags-ignore:
      - '**'
    # 排除包含 [skip ci] 的提交

jobs:
  download_and_save:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      # Step 1: 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9" # 你可以根据需要调整 Python 版本

      # Step 3: 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml requests webdavclient3

      # Step 4: 运行下载和上传脚本
      - name: Run upload script
        env:
          WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
          WEBDAV_USERNAME: ${{ secrets.WEBDAV_USERNAME }}
          WEBDAV_PASSWORD: ${{ secrets.WEBDAV_PASSWORD }}
        run: |
          # 检查是否是 workflow_dispatch 触发的
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Manual trigger detected: Running script with --force"
            python script.py --all
          else
            echo "Scheduled or push trigger: Running script normally"
            python script.py 
          fi

      #  # Step 5: 保存 bins 文件夹为 Artifact
      # - name: Save bins folder
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: bins
      #     path: bins/ # 假设下载的文件保存在 bins/ 目录下

      - name: Commit and push config.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 配置 Git 用户信息
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # 添加更新的 config.yaml 文件
          git add config.yaml
          
          # 检查是否有更改需要提交
          if git diff --cached --quiet; then
            echo "No changes to commit. Skipping push."
          else
            echo "Changes detected. Committing and pushing config.yaml."
            git commit -m "Update config.yaml [skip ci]"
            
            # 替换远程仓库 URL，使用 GITHUB_TOKEN 进行身份验证
            git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
            
            # 推送更改
            git push origin HEAD
          fi